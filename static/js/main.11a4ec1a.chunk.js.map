{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","store/PeopleContext.tsx","components/People/PersonLink.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/SortLink.tsx","components/People/People.tsx","components/PeopleFilters.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Navbar","activeClass","isActive","classNames","className","role","to","App","HomePage","NotFoundPage","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleContext","React","createContext","people","loading","errorMessage","query","sort","order","sex","centuries","PeopleProvider","children","useSearchParams","searchParams","useState","setPeople","setLoading","setErrorMessage","get","getAll","preparePeople","data","changedPeople","map","child","mother","father","motherName","find","name","fatherName","useEffect","getPeople","catch","finally","value","useMemo","toString","Provider","usePeople","useContext","PersonLink","person","search","useLocation","pathname","slug","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","delete","Array","isArray","part","append","set","SearchLink","params","props","SortLink","sortField","currentField","descOrder","sortClassName","People","useParams","realSlug","born","died","PeopleFilters","setSearchParams","type","placeholder","onChange","event","target","el","includes","century","filter","f","length","PeoplePage","filteredPeople","a","b","localeCompare","Error","reverse","lowerQuery","toLowerCase","Math","ceil","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.11a4ec1a.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar: React.FC = () => {\n  const activeClass = (\n    { isActive } : { isActive: boolean },\n  ) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={activeClass}>Home</NavLink>\n          <NavLink to=\"/people\" className={activeClass}>People</NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, {\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleContextType } from './PeopleContextType';\n\nexport const PeopleContext = React.createContext<PeopleContextType>({\n  people: [],\n  loading: false,\n  errorMessage: '',\n  query: '',\n  sort: '',\n  order: '',\n  sex: '',\n  centuries: [],\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [searchParams] = useSearchParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const query = searchParams.get('query') || '';\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('century') || [];\n\n  const preparePeople = (data: Person[]) => {\n    const changedPeople = data.map(child => {\n      let mother;\n      let father;\n\n      if (child.motherName) {\n        mother = data.find(({ name }) => child.motherName === name);\n      }\n\n      if (child.fatherName) {\n        father = data.find(({ name }) => child.fatherName === name);\n      }\n\n      return { ...child, father, mother };\n    });\n\n    setPeople(changedPeople);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then(preparePeople)\n      .catch(() => {\n        setErrorMessage('Unable to load people');\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const value = useMemo(() => ({\n    people,\n    loading,\n    errorMessage,\n    query,\n    sort,\n    order,\n    sex,\n    centuries,\n  }), [\n    loading,\n    errorMessage,\n    searchParams.toString(),\n  ]);\n\n  return (\n    <PeopleContext.Provider value={value}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n\nexport function usePeople() {\n  return useContext(PeopleContext);\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { search } = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: person.slug,\n        search,\n      }}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { usePeople } from '../store/PeopleContext';\nimport { SearchLink } from './SearchLink';\nimport { SearchParams } from '../utils/searchHelper';\n\ntype SortBy = keyof Person;\n\ntype Props = {\n  sortField: SortBy;\n  children: React.ReactNode;\n};\n\nexport const SortLink: React.FC<Props> = ({ sortField, children }) => {\n  const {\n    sort,\n    order,\n  } = usePeople();\n\n  const currentField = sort === sortField;\n  const descOrder = order === 'desc';\n\n  const params: SearchParams = {\n    sort: currentField && descOrder ? null : sortField,\n    order: currentField && !descOrder ? 'desc' : null,\n  };\n  const sortClassName = classNames('fas', {\n    'fa-sort': !sort && !order,\n    'fa-sort-up': currentField && !order,\n    'fa-sort-down': currentField && order,\n  });\n\n  return (\n    <span className=\"is-flex is-flex-wrap-nowrap\">\n      {children}\n      <SearchLink\n        params={params}\n      >\n        <span className=\"icon\">\n          <i className={sortClassName} />\n        </span>\n      </SearchLink>\n    </span>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\nimport { SortLink } from '../SortLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const People: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const realSlug = slug ?? null;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <SortLink sortField=\"name\">Name</SortLink>\n          </th>\n          <th>\n            <SortLink sortField=\"sex\">Sex</SortLink>\n          </th>\n          <th>\n            <SortLink sortField=\"born\">Born</SortLink>\n          </th>\n          <th>\n            <SortLink sortField=\"died\">Died</SortLink>\n          </th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === realSlug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? (\n                  <PersonLink person={person.mother} />\n                ) : (\n                  person.motherName || '-'\n                )}\n            </td>\n            <td>\n              {person.father\n                ? (\n                  <PersonLink person={person.father} />\n                ) : (\n                  person.fatherName || '-'\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { usePeople } from '../store/PeopleContext';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {\n    query,\n    sex,\n    centuries,\n  } = usePeople();\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchParams(\n      getSearchWith(searchParams, { query: event.target.value || null }),\n    );\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={classNames({\n            'is-active': !sex,\n          })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={classNames({\n            'is-active': sex === 'm',\n          })}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={classNames({\n            'is-active': sex === 'f',\n          })}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {['16', '17', '18', '19', '20'].map(el => (\n              <SearchLink\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(el),\n                })}\n                params={{\n                  century: centuries.includes(el.toString())\n                    ? centuries.filter((f) => f !== el)\n                    : [...centuries, el],\n                }}\n                key={el}\n              >\n                {el}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              className={classNames('button is-success', {\n                'is-outlined': !!centuries.length,\n              })}\n              params={{ century: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ query: null, sex: null, century: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import { Loader } from '../components/Loader';\nimport { usePeople } from '../store/PeopleContext';\nimport { People } from '../components/People';\nimport { PeopleFilters } from '../components/PeopleFilters';\n\nexport const PeoplePage = () => {\n  const {\n    people,\n    loading,\n    errorMessage,\n    sort,\n    order,\n    query,\n    sex,\n    centuries,\n  } = usePeople();\n\n  let filteredPeople = [...people];\n\n  if (sort) {\n    switch (sort) {\n      case 'name':\n      case 'sex':\n        filteredPeople.sort((a, b) => {\n          return a[sort].localeCompare(b[sort]);\n        });\n        break;\n\n      case 'born':\n      case 'died':\n        filteredPeople.sort((a, b) => {\n          return a[sort] - b[sort];\n        });\n        break;\n\n      default:\n        throw new Error(\n          'There are no people matching the current search criteria',\n        );\n    }\n  }\n\n  if (order) {\n    filteredPeople.reverse();\n  }\n\n  if (sex) {\n    filteredPeople = filteredPeople.filter((el) => el.sex === sex);\n  }\n\n  if (query) {\n    filteredPeople = filteredPeople.filter((el) => {\n      const lowerQuery = query.toLowerCase();\n\n      return (\n        el.name.toLowerCase().includes(lowerQuery)\n        || el.fatherName?.toLowerCase().includes(lowerQuery)\n        || el.motherName?.toLowerCase().includes(lowerQuery)\n      );\n    });\n  }\n\n  if (centuries.length > 0) {\n    filteredPeople = filteredPeople.filter(el => {\n      return centuries.includes(Math.ceil(el.born / 100).toString());\n    });\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!loading && !!filteredPeople.length && (\n              <PeopleFilters />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {loading && (\n                <Loader />\n              )}\n              {!!filteredPeople.length && (\n                <People people={filteredPeople} />\n              )}\n              {!loading && !filteredPeople.length && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n              {errorMessage && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PeopleProvider } from './store/PeopleContext';\n\nexport const Root = () => {\n  return (\n    <HashRouter>\n      <PeopleProvider>\n        <Routes>\n          <Route path=\"/\" element={<App />}>\n            <Route path=\"*\" element={<NotFoundPage />} />\n            <Route index element={<HomePage />} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          </Route>\n        </Routes>\n      </PeopleProvider>\n    </HashRouter>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}